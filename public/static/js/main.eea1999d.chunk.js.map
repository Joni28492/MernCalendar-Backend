{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalenadarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRouter.js","router/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","uiOpenModal","uiCloseModal","eventSetActive","eventLogout","eventStartAddNew","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","authChecking","authCheckingFinish","authStartLogin","authLogin","authStarRegister","authStarTokenRenew","authLogout","prepareEvents","events","map","e","end","moment","toDate","start","event","type","payload","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","min","seconds","add","nowPlus1","clone","initEvent","notes","CalenadarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRouter","AppRouter","exact","path","checking","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eea1999d.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchSinToken = (endpoint, data, method='GET') =>{\r\n\r\n    const url = `${ baseUrl }/${endpoint}`;//localhost:4000/api/endpoint\r\n\r\n    if(method ==='GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const fetchConToken = (endpoint, data, method='GET') =>{\r\n\r\n    const url = `${ baseUrl }/${endpoint}`;//localhost:4000/api/endpoint\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method ==='GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n\r\n}","\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStarRegister: '[auth] Start register',\r\n    authStarTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n    \r\n};","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = (events = []) =>{\r\n  \r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n}","import { types } from \"../types/types\";\r\nimport { fetchConToken } from '../helpers/fetch'; \r\nimport { prepareEvents } from '../helpers/prepareEvents'; \r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async(dispatch, getState) =>{\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n      try {\r\n        const resp =await  fetchConToken('events', event, 'POST');\r\n        const body =await resp.json();\r\n        \r\n        if (body.ok) {\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n                _id: uid,\r\n                name: name\r\n            } \r\n            console.log(event);\r\n            dispatch( eventAddNew(event) )\r\n        }\r\n\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) =>({\r\n    type:types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) =>({\r\n    type:types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventClearActiveEvent = () =>({type:types.eventClearActiveEvent});\r\n\r\n\r\nexport const  eventStartUpdate = (event) =>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventUpdated = (event) =>({\r\n    type:types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\n\r\n\r\nexport const evetStartDelete = () =>{\r\n    return async(dispatch, getState)=>{\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n          try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () =>({type:types.eventDeleted});\r\n\r\n\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);\r\n            // console.log(events);\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventLoaded = (events) =>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\nexport const eventLogout = () =>( {type: types.eventLogout} );\r\n\r\n","import { fetchSinToken, fetchConToken } from '../helpers/fetch'; \r\nimport { types } from '../types/types'; \r\nimport Swal from 'sweetalert2';\r\nimport {eventLogout} from './events';\r\n\r\nexport const startLogin = (email, password )=> {\r\n    //funcion asincrona usa thunk\r\n    return async(dispatch) =>{//el posteo que hacemos en postman\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();//la respuesta de postman\r\n        \r\n        if(body.ok) {//el ok es del backend\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }else{//denegamos por usuario o password\r\n            Swal.fire('Error', body.msg, 'error' );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) =>{\r\n    return async(dispatch)=>{//asincrona\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();//la respuesta de postman\r\n\r\n        if(body.ok) {//el ok es del backend\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }else{//denegamos por usuario o password\r\n            Swal.fire('Error', body.msg, 'error' );\r\n           \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const startChecking = () =>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();///aqui esta el error\r\n        // console.log(body);\r\n\r\n        if(body.ok) {//el ok es del backend\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }else{\r\n            // Swal.fire('Error', body.msg, 'error' );//msg sin token\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () =>({ type:types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type:types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout =()=>({type: types.authLogout});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport './login.css';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport {useDispatch} from 'react-redux';\r\nimport {startLogin, startRegister} from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n   const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'joni@gmail.com',\r\n        lPassword: '123456',\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'luis',\r\n        rEmail: 'luis@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error' );\r\n        }\r\n        console.log('????');\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit = {handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n//\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button onClick={handleLogout} \r\n                className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n   \r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <span>{title}</span>\r\n            <strong>-{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const uiOpenModal = () =>({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () =>({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartUpdate, eventStartAddNew } from '../../actions/events';\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().min(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n};\r\n\r\nexport const CalenadarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { title, notes, start, end } =formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);      \r\n        }else{\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n   \r\n    const handleInputChange = ({target}) =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        // console.log('cerrar modal');\r\n        dispatch(uiCloseModal());\r\n        dispatch( eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n\r\n    }\r\n    \r\n    const handleStartDateChange = (e) =>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n    \r\n    const handleEndDateChange = (e) =>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) =>{\r\n        \r\n        e.preventDefault();\r\n        //convertimos en isntancias de moment\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n       //si es igual o esta despues es error\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error') \r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //TODO: realizar grabacion\r\n        // console.log(formValues);\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate = {dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange = {handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                    value={notes}\r\n                    onChange = {handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const handleClickNew = () =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button \r\n            onClick={handleClickNew}\r\n            className=\"btn btn-primary fab\">\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { evetStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () =>{\r\n        dispatch(evetStartDelete());\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport 'moment/locale/es';\r\nimport { CalenadarModal } from './CalenadarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive,eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(), //newDate\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name:'Joni'\r\n//     }\r\n// }];\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n   \r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    const eventeStylerGetter = (event, start, end, isSelected) =>{\r\n\r\n\r\n        // console.log(event)\r\n        \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        \r\n        \r\n        \r\n        return {style};\r\n    }\r\n\r\n    const onDoubleClick = (e) =>{\r\n        // console.log('Abrir Modal');\r\n        dispatch(uiOpenModal());\r\n    }\r\n    \r\n    const onSelectEvent = (e) =>{\r\n       dispatch(eventSetActive(e));\r\n    }\r\n    \r\n    const onViewChange = (e) =>{\r\n        // console.log(e);\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) =>{\r\n        // console.log(e);\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n           <Navbar />\r\n           <Calendar \r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventeStylerGetter}\r\n                components={{event: CalendarEvent}}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n           />\r\n            <AddNewFab />\r\n\r\n            {(activeEvent) && <DeleteEventFab />}\r\n            \r\n           \r\n           \r\n           <CalenadarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n        \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    // console.log(rest.location.pathname);\r\n   \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n        \r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRouter } from './PrivateRouter';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid} = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch]);\r\n\r\n    // console.log(checking);\r\n    \r\n    // if(checking){\r\n    //     return (<h5>Espere...</h5>);\r\n    // }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\r\n                    <PrivateRouter exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n//             id: 'dsfhksdjfhksdf,\r\n//             title: 'Cumpleaños del jefe',\r\n//             start: moment().toDate(), //newDate\r\n//             end: moment().add(2,'hours').toDate(),\r\n//             notes: 'comprar el pastel',\r\n//             user: {\r\n//                 _id: '123',\r\n//                 name:'Joni'\r\n//             }\r\n// }\r\n\r\nconst initialState={\r\n    events: [],\r\n    activeEvent: null//{} \r\n};\r\n\r\n\r\nexport const calendarReducer = (state=initialState, action) =>{\r\n    switch (action.type) {\r\n\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [//... innecesarios\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n            \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id) \r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {//recomendable ...\r\n                ...state,\r\n                modalOpen:true\r\n            }\r\n            \r\n        case types.uiCloseModal:\r\n            return {//recomendable ...\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types'; \r\n\r\nconst  initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n};\r\n\r\n\r\nexport const authReducer = (state=initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.authLogin: \r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }  \r\n        \r\n        case types.checkingFinish:\r\n            return { \r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n       \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n// console.log(process.env);\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}